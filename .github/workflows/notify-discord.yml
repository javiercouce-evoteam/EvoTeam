name: Discord Notification

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, closed, reopened, synchronize]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_GITHUB }}
        run: |
          EVENT_NAME="${{ github.event_name }}"

          if [ "$EVENT_NAME" = "pull_request" ]; then
            PR_TITLE="${{ github.event.pull_request.title }}"
            PR_BODY="${{ github.event.pull_request.body }}"
            PR_URL="${{ github.event.pull_request.html_url }}"
            PR_AUTHOR="${{ github.event.pull_request.user.login }}"
            PR_ACTION="${{ github.event.action }}"
            PR_FROM="${{ github.head_ref }}"
            PR_TO="${{ github.base_ref }}"
            PR_COMMITS="${{ github.event.pull_request.commits }}"

            jq -n \
              --arg title "üîÄ Pull Request ${PR_ACTION^^}" \
              --arg desc "**$PR_TITLE**\n\n$PR_BODY" \
              --arg url "$PR_URL" \
              --arg author "$PR_AUTHOR" \
              --arg from "$PR_FROM" \
              --arg to "$PR_TO" \
              --arg commits "$PR_COMMITS" \
              '{
                embeds: [{
                  title: $title,
                  description: $desc,
                  url: $url,
                  color: 5814783,
                  fields: [
                    { name: "Autor", value: $author, inline: true },
                    { name: "Rama origen ‚Üí destino", value: "\($from) ‚Üí \($to)", inline: true },
                    { name: "Commits", value: $commits, inline: true }
                  ]
                }]
              }' | curl -H "Content-Type: application/json" -X POST -d @- $DISCORD_WEBHOOK

          elif [ "$EVENT_NAME" = "push" ]; then
            REPO="${{ github.repository }}"
            AUTHOR="${{ github.actor }}"
            REF="${{ github.ref_name }}"
            COMMITS=$(jq -c '.commits[]' "$GITHUB_EVENT_PATH")

            DESCRIPTION="üßë Autor: \`$AUTHOR\`\nüîÅ Rama: \`$REF\`\nüì¶ Commits:\n"

            while IFS= read -r commit; do
              MESSAGE=$(echo $commit | jq -r '.message')
              URL=$(echo $commit | jq -r '.url')
              SHA=$(echo $commit | jq -r '.id' | cut -c1-7)
              DESCRIPTION="${DESCRIPTION}‚Ä¢ [\`${SHA}\`](${URL}) ${MESSAGE}"$'\n'
            done <<< "$COMMITS"

            jq -n \
              --arg title "üì¶ Push a $REF" \
              --arg desc "$DESCRIPTION" \
              '{
                embeds: [{
                  title: $title,
                  description: $desc,
                  color: 3066993
                }]
              }' | curl -H "Content-Type: application/json" -X POST -d @- $DISCORD_WEBHOOK
